# CI/CD Pipeline 설정
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Cache node_modules to avoid unnecessary npm installs
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-packages-

      # 3. Install dependencies only if cache is not found
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      # 4. Build Docker image for React client
      - name: Build Docker image for React client
        run: |
          echo "REACT_APP_KAKAO_INIT_KEY=${{ secrets.REACT_APP_KAKAO_INIT_KEY }}" >> .env
          echo "REACT_APP_OPENVIDU_SERVER_SECRET=${{ secrets.REACT_APP_OPENVIDU_SERVER_SECRET }}" >> .env
          echo "REACT_APP_OPENVIDU_SERVER_URL=${{ secrets.REACT_APP_OPENVIDU_SERVER_URL }}" >> .env
          docker build --build-arg REACT_ENV_FILE=.env -t hd3ce/cookeat-client:latest .

      # 5. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cookeat-client:latest

      # 7. Invoke Lambda function to deploy on EC2
      - name: Invoke Lambda for deployment
        run: |
          curl -X POST https://mpila4kyx5.execute-api.ap-northeast-2.amazonaws.com/2024-09-11/cookeat-deploy-client \
          -H "x-api-key: ${{ secrets.X_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{}'
